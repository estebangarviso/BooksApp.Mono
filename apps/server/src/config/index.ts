const {
	ALLOWED_ORIGINS = ['*'],
	API_PREFIX,
	APP_ENV,
	APP_NAME,
	APP_VERSION,
	BASE_URL,
	DB_CACHE,
	DB_DATABASE,
	DB_HOST,
	DB_LOGGING,
	DB_MAX_CONNECTIONS,
	DB_PASSWORD,
	DB_PORT,
	DB_RUN_MIGRATIONS,
	DB_SYNCHRONIZE,
	DB_TIMEOUT,
	DB_TYPE,
	DB_USERNAME,
	LANG,
	LOG_COLORIZE,
	LOG_LEVEL,
	NODE_ENV,
	PORT,
	REQUEST_MAX_JSON_BODY_SIZE,
	REQUEST_TIMEOUT,
	SECURITY_API_KEY,
	SECURITY_BCRYPT_SALT_ROUNDS,
	SECURITY_ENABLED,
	SECURITY_HEADER_NAME,
	SECURITY_JWT_ACCESS_TOKEN_EXPIRES_IN,
	SECURITY_JWT_ACCESS_TOKEN_SECRET,
	SECURITY_JWT_ALGORITHM,
	SECURITY_JWT_REFRESH_TOKEN_EXPIRES_IN,
	SECURITY_JWT_REFRESH_TOKEN_SECRET,
	SUPPORTED_LANGS,
	SWAGGER_UI,
} = process.env;

export const env = {
	NODE_ENV,
	APP: {
		ALLOWED_ORIGINS,
		API_PREFIX,
		BASE_URL,
		ENV: APP_ENV,
		LANG,
		LOG_COLORIZE: LOG_COLORIZE === 'true',
		LOG_LEVEL,
		NAME: APP_NAME,
		PORT: +PORT,
		REQUEST_MAX_JSON_BODY_SIZE,
		REQUEST_TIMEOUT: +REQUEST_TIMEOUT,
		SWAGGER_ENABLED: SWAGGER_UI === 'true',
		VERSION: APP_VERSION,
		SECURITY: {
			API_KEY: SECURITY_API_KEY,
			ENABLED: SECURITY_ENABLED === 'true' && !!API_PREFIX,
			HEADER_NAME: SECURITY_HEADER_NAME,
			BCRYPT: {
				SALT_ROUNDS: +SECURITY_BCRYPT_SALT_ROUNDS,
			},
			JWT: {
				ALGORITHM: SECURITY_JWT_ALGORITHM,
				TOKENS: {
					ACCESS_TOKEN: {
						EXPIRES_IN: SECURITY_JWT_ACCESS_TOKEN_EXPIRES_IN,
						SECRET: SECURITY_JWT_ACCESS_TOKEN_SECRET,
					},
					REFRESH_TOKEN: {
						EXPIRES_IN: SECURITY_JWT_REFRESH_TOKEN_EXPIRES_IN,
						SECRET: SECURITY_JWT_REFRESH_TOKEN_SECRET,
					},
				},
			},
		},
		SUPPORTED_LANGS: SUPPORTED_LANGS
			? (SUPPORTED_LANGS.split(',') as ajvI18nLanguages[])
			: (['es'] as ajvI18nLanguages[]),
	},
	DATABASE: {
		CACHE: DB_CACHE === 'true',
		DATABASE_NAME: DB_DATABASE,
		DIALECT: DB_TYPE,
		HOST: DB_HOST,
		LOGGING: DB_LOGGING === 'true',
		MAX_CONNECTIONS: +DB_MAX_CONNECTIONS,
		PASSWORD: DB_PASSWORD,
		PORT: +DB_PORT,
		RUN_MIGRATIONS: DB_RUN_MIGRATIONS === 'true',
		SYNCHRONIZE: DB_SYNCHRONIZE === 'true',
		TIMEOUT: +DB_TIMEOUT,
		USERNAME: DB_USERNAME,
	},
};
